--\\ MAKE SURE U DONT BREAK THE EMOJI LIST CAUSE IF IT FAILS IT BREAKS SCRIPTWARE

local Emojis = { --\\ Before changing or adding an emoji make sure./its in the supported table thx
    '193466029/💋',
    '375963706/🍆',
    '2500597056/🍑',
    '2046357886/🎈',
    '229011257/👑',
}


--\\ The emoji must be in this table to be used if someone wants one not in this list then add it
local SupportedEmojis = {'😬','🦇','⭐','🖤','💫','🌕','🥶','🥶🥵','🦋','✨','✅','🧐','💋','❄️','🌟','🏈','🌈','🔞','💦','💎','⚡','🌹','🌸','🤡','⛄','😋','😏','💀','😈','💯','✌','💖','👑','🌚','👻','🍑','😳','🍉',🐾','😇','🍆','🔫','💋','🍑','
🎈'}

--\\ Don't mess with anything below this
function names()
    --[[for _,Player in pairs(game:GetService('Players'):GetChildren()) do
        if game.Workspace.Players:FindFirstChild(Player.Name) then
            if not Player.Character.UpperTorso:FindFirstChild('OriginalSize') then 
                if not string.find(Player.Character:FindFirstChildWhichIsA('Humanoid').DisplayName, '%[') then
                    Player.Character:FindFirstChildWhichIsA('Humanoid').DisplayName = ('[🕶️]' .. Player.DisplayName)
                end
            end
        end 
    end]]
    for _,Player in pairs(game:GetService('Players'):GetChildren()) do
        for i,v in pairs(SupportedEmojis) do
            local CheckEmoji = v
            if table.find(Emojis, (tostring(Player.UserId) .. '/' .. v)) then
                if Player.Character then
                    Player.Character:FindFirstChildWhichIsA('Humanoid').DisplayName = ('[' .. v .. '] ' .. Player.DisplayName)
                end
            end
        end
    end
end

local success,err = pcall(names)
